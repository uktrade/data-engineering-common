flask:
  env: $ENV{FLASK_ENV, dev}
app:
  secret_key: $ENV{DSS_APP_SECRET_KEY, random_string_dss}
  database_url: $ENV{DSS_DATABASE_URL, postgresql://postgres@dss_postgres/postgres}
  pagination_size: $ENV{DSS_PAGINATION_SIZE, 50}
sso:
  base_url: $ENV{SSO_URL, https://sso.trade.gov.uk}
  profile_path: $ENV{ACCESS_TOKEN_PATH, /api/v1/user/me/}
  authorize_path: $ENV{AUTHORIZE_PATH, /o/authorize/}
  access_token_path: $ENV{DSS_SSO_PATH_USER, /o/token/}
  logout_path: $ENV{DSS_SSO_PATH_LOGOUT, /logout/}
  client_id: $ENV{DSS_ABC_CLIENT_ID, sso_client_id}
  client_secret: $ENV{DSS_ABC_CLIENT_SECRET, sso_client_secret}
access_control:
  hawk_enabled: $ENV{DSS_HAWK_ENABLED, True}
  hawk_nonce_enabled: $ENV{DSS_HAWK_NONCE_ENABLED, True}
  hawk_response_header: $ENV{DSS_HAWK_RESPONSE_HEADER, True}
  hawk_algorithm: $ENV{DSS_HAWK_ALGORITHM, sha256}
  hawk_accept_untrusted_content: $ENV{DSS_HAWK_ACCEPT_UNTRUSTED_CONTENT, False}
  hawk_localtime_offset_in_seconds: $ENV{DSS_HAWK_LOCALTIME_OFFSET_IN_SECONDS, 0}
  hawk_timestamp_skew_in_seconds: $ENV{DSS_HAWK_TIMESTAMP_SKEW_IN_SECONDS, 60}
cache:
  host: $ENV{CACHE_HOST, redis://dss_redis}
  port: $ENV{CACHE_PORT, 6379}
  password: $ENV{CACHE_PWD, }
  ssl: $ENV{CACHE_SSL, True}
session:
  secret_key: $ENV{DSS_SESSION_SECRET_KEY, _dss_authbroker_token}
inputs:
  source-folder: $ENV{INPUTS_SOURCE_FOLDER, inputs/source/}